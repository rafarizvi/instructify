export type { ApolloClientOptions, DefaultOptions } from "./ApolloClient.js";
export { ApolloClient, mergeOptions } from "./ApolloClient.js";
export type { FetchMoreOptions, UpdateQueryOptions, } from "@apollo/client/core/ObservableQuery.js";
export { ObservableQuery } from "@apollo/client/core/ObservableQuery.js";
export type { QueryOptions, WatchQueryOptions, MutationOptions, SubscriptionOptions, FetchPolicy, WatchQueryFetchPolicy, MutationFetchPolicy, RefetchWritePolicy, ErrorPolicy, FetchMoreQueryOptions, SubscribeToMoreOptions, } from "@apollo/client/core/watchQueryOptions.js";
export { NetworkStatus, isNetworkRequestSettled } from "@apollo/client/core/networkStatus.js";
export * from "@apollo/client/core/types.js";
export type { Resolver, FragmentMatcher } from "@apollo/client/core/LocalState.js";
export { isApolloError, ApolloError } from "@apollo/client/errors";
export type { Transaction, DataProxy, InMemoryCacheConfig, ReactiveVar, TypePolicies, TypePolicy, FieldPolicy, FieldReadFunction, FieldMergeFunction, FieldFunctionOptions, PossibleTypesMap, WatchFragmentOptions, WatchFragmentResult, } from "@apollo/client/cache";
export { Cache, ApolloCache, InMemoryCache, MissingFieldError, defaultDataIdFromObject, makeVar, } from "@apollo/client/cache";
export * from "@apollo/client/cache/inmemory/types.js";
export * from "@apollo/client/link/core";
export * from "@apollo/client/link/http";
export type { ServerError } from "@apollo/client/link/utils";
export { fromError, toPromise, fromPromise, throwServerError, } from "@apollo/client/link/utils";
export type { DocumentTransformCacheKey, Observer, ObservableSubscription, Reference, StoreObject, } from "@apollo/client/utilities";
export { DocumentTransform, Observable, isReference, makeReference, } from "@apollo/client/utilities";
import { setVerbosity } from "ts-invariant";
export { setVerbosity as setLogVerbosity };
export { gql, resetCaches, disableFragmentWarnings, enableExperimentalFragmentVariables, disableExperimentalFragmentVariables, } from "graphql-tag";
//# sourceMappingURL=index.d.ts.map